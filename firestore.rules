rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if user owns the resource data
    function isResourceOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if user owns the request data
    function isRequestOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User profiles - users can only access their own profile
    match /users/{userId} {
      allow read, write, update: if isOwner(userId);
      allow create: if isRequestOwner(userId);
    }
    
    // Blood pressure readings - users can only access their own readings
    match /bloodPressure/{readingId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Medications - users can only access their own medications
    match /medications/{medicationId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Mood entries - users can only access their own mood data
    match /moodEntries/{entryId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Mood factors - users can only access their own mood factors
    match /moodFactors/{factorId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Goals - users can only access their own goals
    match /goals/{goalId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Notification settings - users can only access their own settings
    match /notifications/{notificationId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Reminders - users can only access their own reminders
    match /reminders/{reminderId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Data exports - users can only access their own exports
    match /exports/{exportId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Emergency contacts - users can only access their own emergency contacts
    match /emergencyContacts/{contactId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Health metrics - users can only access their own metrics
    match /healthMetrics/{metricId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // App settings - users can only access their own settings
    match /settings/{settingId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Limb assessments - users can only access their own assessments
    match /limbAssessments/{assessmentId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Prosthetic care - users can only access their own prosthetic care data
    match /prostheticCare/{careId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Pain tracking - users can only access their own pain data
    match /painTracking/{painId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Care reminders - users can only access their own care reminders
    match /careReminders/{reminderId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Durable Medical Equipment - users can only access their own DME data
    match /durableMedicalEquipment/{dmeId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Meals - users can only access their own meal data
    match /meals/{mealId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Cholesterol entries - users can only access their own cholesterol data
    match /cholesterolEntries/{entryId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Cholesterol history - users can only access their own cholesterol history data
    match /cholesterolHistory/{entryId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Weight entries - users can only access their own weight data
    match /weightEntries/{entryId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Weight goals - users can only access their own weight goals
    match /weightGoals/{goalId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Weight loss plans - users can only access their own plans
    match /weightLossPlans/{planId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Physical activity - users can only access their own activity data
    match /physicalActivity/{activityId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Sleep entries - users can only access their own sleep data
    match /sleepEntries/{entryId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Medical history - users can only access their own medical history
    match /medicalHistory/{historyId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Immunizations - users can only access their own immunization records
    match /immunizations/{immunizationId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // User profiles - users can only access their own profile
    match /profiles/{profileId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Nutrition entries - users can only access their own nutrition data
    match /nutritionEntries/{entryId} {
      allow read, write, update, delete: if isAuthenticated() && 
        (resource == null || isResourceOwner(resource.data.userId));
      allow create: if isAuthenticated() && 
        isRequestOwner(request.resource.data.userId);
    }
    
    // Deny access to all other collections and documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 